name: Generate Pre-release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (e.g., 1.2.0-beta)'
        required: true
      base_branch:
        description: 'Branch to release from'
        required: true
        default: 'main'

jobs:
  pre-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.base_branch }}
          path: bluehost-blueprint

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install NPM dependencies
        working-directory: bluehost-blueprint
        run: npm install

      - name: Setup PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: '8.1'
          extensions: mbstring, xml
          tools: composer, phpcs

      - name: Install PHPCS and WordPress Coding Standards
        run: |
          composer install
          phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs

      - name: Run PHPCS
        run: composer lint

      - name: Run bundle script
        run: npm run bundle

      - name: Setup wp-env and test theme
        run: |
          npm install @wordpress/env --save-dev
          npx wp-env start
          npx wp-env run cli wp theme activate wp-theme-bluehost-blueprint

      - name: Check if site is up (status code 200)
        run: |
          http_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8888)
          if [ "$http_status" -eq 200 ]; then
            echo "WordPress is up and running with status code 200!"
          else
            echo "Error: WordPress returned status code $http_status"
            exit 1
          fi

      - name: Set up Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create Git Tag
        id: create_tag
        working-directory: bluehost-blueprint
        run: |
          TAG_NAME="v${{ github.event.inputs.release_name }}"
          git tag -a "$TAG_NAME" -m "Pre-release $TAG_NAME"
          git push origin "$TAG_NAME"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create Pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          name: ${{ github.event.inputs.release_name }}
          prerelease: true
          files: |
            bluehost-blueprint/bluehost-blueprint.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}